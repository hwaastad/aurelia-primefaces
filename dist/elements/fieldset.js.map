{"version":3,"sources":["elements/fieldset.js"],"names":[],"mappings":";;;;;;;;;;;;gCAAsD,mBAAmB;;IAI5D,kBAAkB;;;;0BAAlB,kBAAkB;;;;mBACR,SAAS;;;;;;;mBACL,SAAS;;;;;;;mBACL,SAAS;;;;;;;mBACd,SAAS;;;;;;;;;;;;;;;AAMpB,aAVF,kBAAkB,CAUf,OAAO,EAAE;;;;;;;;;;;;;;;AACjB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;0BAbQ,kBAAkB;;eAenB,oBAAG;;;AACP,aAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AACpC,0BAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,8BAAc,EAAE,IAAI,CAAC,cAAc;AACnC,yBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,4BAAY,EAAE,IAAI,CAAC,cAAc,GAAG,UAAC,KAAK,EAAS,SAAS,EAAc;AACtE,0BAAK,cAAc,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC;iBAC3E,GAAG,IAAI;AACR,2BAAW,EAAE,IAAI,CAAC,aAAa,GAAG,UAAC,KAAK,EAAS,SAAS,EAAc;AACpE,0BAAK,aAAa,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC;iBAC1E,GAAG,IAAI;AACR,wBAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;AACH,gBAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;;;eAEc,yBAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC1C,gBAAI,IAAI,CAAC,WAAW,EAAE;AAClB,iBAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC7D;SACJ;;;eAEO,oBAAG;AACP,aAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACnD,gBAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;;;8BAxCQ,kBAAkB;AAAlB,sBAAkB,GAD9B,8BAAO,OAAO,CAAC,CACH,kBAAkB,KAAlB,kBAAkB;AAAlB,sBAAkB,GAF9B,qCAAc,YAAY,CAAC,CAEf,kBAAkB,KAAlB,kBAAkB;WAAlB,kBAAkB","file":"elements/fieldset.js","sourcesContent":["import {inject, noView, customElement, bindable} from 'aurelia-framework';\n\n@customElement('p-fieldset')\n@inject(Element)\nexport class FieldSetConmponent {\n    @bindable legend = undefined;\n    @bindable toggleable = undefined;\n    @bindable toggleDuration = undefined;\n    @bindable collapsed = undefined;\n    @bindable onBeforeToggle;\n    @bindable onAfterToggle;\n\n    initialized;\n\n    constructor(element) {\n        this.element = element;\n        this.initialized = false;\n    }\n\n    attached() {\n        $(this.element.children[0]).puifieldset({\n            toggleable: this.toggleable,\n            toggleDuration: this.toggleDuration,\n            collapsed: this.collapsed,\n            beforeToggle: this.onBeforeToggle ? (event: Event, collapsed: boolean) => {\n                this.onBeforeToggle({ 'originalEvent': event, 'collapsed': collapsed });\n            } : null,\n            afterToggle: this.onAfterToggle ? (event: Event, collapsed: boolean) => {\n                this.onAfterToggle({ 'originalEvent': event, 'collapsed': collapsed });\n            } : null,\n            enhanced: true\n        });\n        this.initialized = true;\n    }\n\n    propertyChanged(property, newValue, oldValue) {\n        if (this.initialized) {\n            $(this.element).puifieldset('option', property, newValue);\n        }\n    }\n\n    detached() {\n        $(this.element.children[0]).puifieldset('destroy');\n        this.initialized = false;\n    }\n\n}\n"],"sourceRoot":"/home/helge/GitHub/aurelia-primefaces/src"}